function updateRemarks(deviceIp, history, deviceType) {
    let downtimeEntries = history.filter(entry => entry.status === "Offline");

    // Filter only downtimes that lasted more than 5 minutes (except for servers)
    let filteredDowntimeEntries = downtimeEntries.filter((entry, index, arr) => {
        if (deviceType === "SERVER") return true; // Always count downtime for servers
        if (index === 0) return true; // Always keep the first entry

        let previousEntry = arr[index - 1];
        let duration = (new Date(entry.timestamp) - new Date(previousEntry.timestamp)) / 1000;
        return duration >= 300; // 300 seconds = 5 minutes
    });

    let downtimeCount = filteredDowntimeEntries.length;
    let totalDowntimeDuration = filteredDowntimeEntries.reduce((total, entry) => total + (new Date() - new Date(entry.timestamp)), 0) / 1000;
    totalDowntimeDuration = Math.floor(totalDowntimeDuration / 86400); // Convert to days

    const remarkElement = document.getElementById(`remark-${deviceIp}`);
    let lastStatus = history.length > 0 ? history[history.length - 1].status : "Unknown";

    // **NEW FIX**: If there are no history entries, rely only on the current status
    if (history.length === 0) {
        remarkElement.innerText = lastStatus === "Offline" ? `Device is Offline.` : `Device is Online.`;
        document.getElementById(`downtime-count-${deviceIp}`).innerText = 0;
        return;
    }

    if (lastStatus === "Offline") {
        if (downtimeCount === 0) {
            remarkElement.innerText = `Device is Offline.`;
        } else if (downtimeCount >= 3 || totalDowntimeDuration > 2) {
            remarkElement.innerText = `Device is Offline, needs repair.`;
        } else {
            remarkElement.innerText = `Device is Offline.`;
        }
    } else if (lastStatus === "Online") {
        if (downtimeCount >= 3 || totalDowntimeDuration > 2) {
            remarkElement.innerText = `Device is Online, needs repair.`;
        } else if (downtimeCount > 0) {
            remarkElement.innerText = `Device is Online, but it had ${downtimeCount} offline occurrences.`;
        } else {
            remarkElement.innerText = `Device is Online.`;
        }
    } else {
        remarkElement.innerText = `Device status unknown.`;
    }

    // Update Downtime Count UI
    let downtimeElement = document.getElementById(`downtime-count-${deviceIp}`);
    if (downtimeElement) {
        downtimeElement.innerText = downtimeCount;
    }
}
