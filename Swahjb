app.get("/api/device/history/:ip", async (req, res) => {
    const ip = req.params.ip;
    const devicesLogs = fs.existsSync(logFile) ? JSON.parse(fs.readFileSync(logFile, "utf8")) : {};

    if (!devicesLogs[ip]) {
        return res.status(404).json({ message: "No history found for this device" });
    }

    // Find the device in your allData
    const device = Object.values(allData).flat().find(d => d.ip_address === ip);

    if (!device) {
        return res.status(404).json({ message: "Device not found in records" });
    }

    const history = devicesLogs[ip].map(log => ({
        status: log.status,
        timestamp: DateTime.fromISO(log.timestamp, { zone: 'utc' }).setZone('Asia/Kolkata').toISO()
    }));

    res.json({
        device_type: device.device_type || "Unknown",
        device_name: device.device_name || "Unknown",
        device_ip: device.ip_address,
        history: history
    });
});
