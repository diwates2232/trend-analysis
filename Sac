<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
</head>
<body>

    <!-- Sidebar -->
    <div id="sidebar">
        <button id="menu-btn" onclick="toggleSidebar()">â˜°</button>
        <div id="sidebar-content">
            <button onclick="window.location.href='index.html'">Back to Dashboard</button>

            <label for="region">Select Region:</label>
            <select id="region" onchange="fetchDeviceData()">
                <option value="apac">APAC</option>
                <option value="emea">EMEA</option>
                <option value="laca">LACA</option>
                <option value="namer">NAMER</option>
            </select>

            <label for="device-type">Filter by Device Type:</label>
            <select id="device-type" onchange="filterData()">
                <option value="all">All</option>
                <option value="Controller">Controller</option>
                <option value="Archiver">Archiver</option>
                <option value="Camera">Camera</option>
                <option value="Server">Server</option>
            </select>

            <label for="remark-filter">Filter by Remark:</label>
            <select id="remark-filter" onchange="filterData()">
                <option value="all">All</option>
                <option value="Device needs repair">Device needs repair</option>
                <option value="Device working properly">Device working properly</option>
            </select>
        </div>
    </div>

    <h1>Device Trend Report</h1>

    <div class="container">
        <table id="device-table">
            <thead>
                <tr>
                    <th>Device IP</th>
                    <th>Device Name</th>
                    <th>Device Type</th>
                    <th>Uptime Duration</th>
                    <th>Downtime Count</th>
                    <th>Downtime Duration</th>
                    <th>Details</th>
                    <th>Remark</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <!-- Device History Modal -->
    <div id="device-history-modal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeHistoryModal()">&times;</span>
            <h2>Device History</h2>
            <div id="device-history"></div>
        </div>
    </div>

    <script src="trend.js"></script>
</body>
</html>




/* Sidebar Styles */
#sidebar {
    width: 50px;
    height: 100vh;
    position: fixed;
    left: 0;
    top: 0;
    background: #333;
    color: white;
    padding: 10px;
    transition: width 0.3s;
    overflow: hidden;
}

#sidebar-content {
    display: none;
}

#sidebar.expanded {
    width: 250px;
}

#sidebar.expanded #sidebar-content {
    display: block;
}

#menu-btn {
    background: none;
    border: none;
    color: white;
    font-size: 24px;
    cursor: pointer;
}

/* Modal Styles */
.modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50%;
    background: white;
    padding: 20px;
    box-shadow: 0px 0px 10px gray;
}

.modal-content {
    position: relative;
}

.close {
    position: absolute;
    top: 10px;
    right: 20px;
    font-size: 20px;
    cursor: pointer;
}






document.addEventListener('DOMContentLoaded', function () {
    let region = 'apac'; // Default region

    function fetchDeviceData() {
        const selectedRegion = document.getElementById('region').value;
        fetch(`http://localhost/api/regions/details/${selectedRegion}`)
            .then(response => response.json())
            .then(data => {
                populateDeviceTable(data.details);
            })
            .catch(error => console.error('Error fetching device data:', error));
    }

    function populateDeviceTable(details) {
        const tableBody = document.getElementById('device-table').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = ''; // Clear existing rows

        let allDevices = [];

        ['cameras', 'archivers', 'controllers', 'servers'].forEach(deviceType => {
            details[deviceType]?.forEach(device => {
                const downtimeCount = device.history.filter(entry => entry.status === "Offline").length;
                const downtimeDuration = calculateDowntimeDuration(device.history);
                const remark = (downtimeCount > 5 || downtimeDuration >= 5) ? "Device needs repair" : "Device working properly";

                allDevices.push({
                    ip: device.ip_address,
                    name: device[deviceType.slice(0, -1) + 'name'],
                    type: deviceType.slice(0, -1).toUpperCase(),
                    uptime: calculateUptimeDuration(device.history),
                    downtimeCount,
                    downtimeDuration,
                    remark
                });
            });
        });

        renderTableRows(allDevices);
    }

    function renderTableRows(devices) {
        const tableBody = document.getElementById('device-table').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = '';

        devices.forEach(device => {
            const row = tableBody.insertRow();
            row.innerHTML = `
                <td>${device.ip}</td>
                <td>${device.name}</td>
                <td>${device.type}</td>
                <td>${device.uptime}</td>
                <td>${device.downtimeCount}</td>
                <td>${device.downtimeDuration}h</td>
                <td><button onclick="openDeviceHistory('${device.ip}')">View History</button></td>
                <td>${device.remark}</td>
            `;
        });
    }

    function filterData() {
        const deviceTypeFilter = document.getElementById('device-type').value;
        const remarkFilter = document.getElementById('remark-filter').value;

        fetch(`http://localhost/api/regions/details/${document.getElementById('region').value}`)
            .then(response => response.json())
            .then(data => {
                let allDevices = [];
                ['cameras', 'archivers', 'controllers', 'servers'].forEach(deviceType => {
                    data.details[deviceType]?.forEach(device => {
                        const downtimeCount = device.history.filter(entry => entry.status === "Offline").length;
                        const downtimeDuration = calculateDowntimeDuration(device.history);
                        const remark = (downtimeCount > 5 || downtimeDuration >= 5) ? "Device needs repair" : "Device working properly";

                        let deviceInfo = {
                            ip: device.ip_address,
                            name: device[deviceType.slice(0, -1) + 'name'],
                            type: deviceType.slice(0, -1).toUpperCase(),
                            uptime: calculateUptimeDuration(device.history),
                            downtimeCount,
                            downtimeDuration,
                            remark
                        };

                        if ((deviceTypeFilter === "all" || deviceInfo.type === deviceTypeFilter) &&
                            (remarkFilter === "all" || deviceInfo.remark === remarkFilter)) {
                            allDevices.push(deviceInfo);
                        }
                    });
                });

                renderTableRows(allDevices);
            });
    }

    function toggleSidebar() {
        document.getElementById('sidebar').classList.toggle('expanded');
    }

    fetchDeviceData();
});
