document.addEventListener('DOMContentLoaded', function () {
    function fetchDeviceData() {
        const selectedRegion = document.getElementById('region').value;
        fetch(`http://localhost/api/regions/details/${selectedRegion}`)
            .then(response => response.json())
            .then(data => {
                populateDeviceTable(data.details);
                fetchTrendData(selectedRegion);
            })
            .catch(error => console.error('Error fetching device data:', error));
    }

    function populateDeviceTable(details) {
        const tableBody = document.getElementById('device-table').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = ''; // Clear existing rows

        if (details) {
            ['cameras', 'archivers', 'controllers', 'servers'].forEach(deviceType => {
                details[deviceType]?.forEach(device => {
                    const downtimeCount = device.history.filter(entry => entry.status === "Offline").length;
                    const downtimeDuration = formatDuration(calculateDowntimeDuration(device.history));
                    const uptimeDuration = formatDuration(calculateUptimeDuration(device.history));
                    const remark = (downtimeCount > 5 || calculateDowntimeDuration(device.history) >= 5) 
                        ? "Device needs repair" 
                        : "Device working properly";

                    const row = tableBody.insertRow();
                    row.innerHTML = `
                        <td>${device.ip_address}</td>
                        <td>${device[deviceType.slice(0, -1) + 'name']}</td>
                        <td>${deviceType.slice(0, -1).toUpperCase()}</td>
                        <td>${uptimeDuration}</td>
                        <td>${downtimeCount}</td>
                        <td>${downtimeDuration}</td>
                        <td><button onclick="openDeviceHistory('${device.ip_address}')">View History</button></td>
                        <td>${remark}</td>
                    `;
                });
            });
        } else {
            console.error('No details found in the response');
        }
    }

    function calculateUptimeDuration(history) {
        let uptimeDuration = 0;
        if (history) {
            history.forEach(entry => {
                if (entry.status === "Online") {
                    uptimeDuration += 60; // Assume each online entry represents 1 hour
                }
            });
        }
        return uptimeDuration;
    }

    function calculateDowntimeDuration(history) {
        let downtimeDuration = 0;
        if (history) {
            for (let i = 1; i < history.length; i++) {
                if (history[i].status === "Offline" && history[i - 1].status === "Online") {
                    let diff = new Date(history[i].timestamp) - new Date(history[i - 1].timestamp);
                    downtimeDuration += diff / (1000 * 60); // Convert to minutes
                }
            }
        }
        return downtimeDuration;
    }

    function formatDuration(minutes) {
        const hours = Math.floor(minutes / 60);
        const mins = Math.floor(minutes % 60);
        return `${hours}h ${mins}m`;
    }




Read Above code carefully .

I want modify device calculateUptimeduration calculate uptime "In device history device status is online then increase its Uptime in real time in Indian time zone .
and display day/hour/minutes/seconds format.

and calculateDowntimeduration " When device goes offline (device status is offline ) then start downtimeDuartion whenever device not change its status .

for this check device history continusly
and i want update device uptime downtime in real time .

update my code as per request.


