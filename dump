const storeStatusInHistory = (ip, status) => {
  const currentDate = moment().tz("Asia/Kolkata").format("YYYY-MM-DD");
  const currentWeek = moment().tz("Asia/Kolkata").week();
  const currentMonth = moment().tz("Asia/Kolkata").month() + 1;

  console.log(`Storing status for device: ${ip}, Status: ${status}`);

  let currentDeviceStatus = deviceStatus.get(ip);

  if (!currentDeviceStatus) {
    console.log(`Initializing new device status for: ${ip}`);
    currentDeviceStatus = {
      status: "Unknown",
      failCount: 0,
      lastOnline: null,
      lastOffline: null,
      statusHistory: {
        day: {},
        week: {},
        month: {}
      }
    };
  }

  let statusHistory = currentDeviceStatus.statusHistory;

  // Initialize day, week, and month history if necessary
  if (!statusHistory.day[currentDate]) {
    statusHistory.day[currentDate] = { uptime: 0, downtime: 0, downtimeDuration: 0 };
  }

  if (!statusHistory.week[currentWeek]) {
    statusHistory.week[currentWeek] = { uptime: 0, downtime: 0, downtimeDuration: 0 };
  }

  if (!statusHistory.month[currentMonth]) {
    statusHistory.month[currentMonth] = { uptime: 0, downtime: 0, downtimeDuration: 0 };
  }

  // Handle device going online
  if (status === "Online") {
    if (currentDeviceStatus.lastOffline) {
      const downtimeDuration = moment().diff(moment(currentDeviceStatus.lastOffline), 'seconds');
      statusHistory.day[currentDate].downtimeDuration += downtimeDuration;
      statusHistory.week[currentWeek].downtimeDuration += downtimeDuration;
      statusHistory.month[currentMonth].downtimeDuration += downtimeDuration;

      statusHistory.day[currentDate].downtime++;
      statusHistory.week[currentWeek].downtime++;
      statusHistory.month[currentMonth].downtime++;

      console.log(`Device ${ip} came online after being offline for ${downtimeDuration} seconds.`);
    }

    statusHistory.day[currentDate].uptime++;
    statusHistory.week[currentWeek].uptime++;
    statusHistory.month[currentMonth].uptime++;

    currentDeviceStatus.lastOffline = null;  // Reset lastOffline when online
    console.log(`Device ${ip} is now online`);

  } else { // Device goes offline
    statusHistory.day[currentDate].downtime++;
    statusHistory.week[currentWeek].downtime++;
    statusHistory.month[currentMonth].downtime++;

    currentDeviceStatus.lastOffline = new Date();  // Set lastOffline time
    console.log(`Device ${ip} is now offline`);
  }

  deviceStatus.set(ip, currentDeviceStatus);
  console.log(`Device status updated for: ${ip}`, currentDeviceStatus);
};
