let chartInstance = null; // Store chart instance

function displayTrendChart(devices) {
    const labels = devices.map(device => device.ip);
    const uptimeData = devices.map(device => convertToMinutes(device.daily.uptime));
    const downtimeData = devices.map(device => convertToMinutes(device.daily.downtimeDuration));

    const ctx = document.getElementById("trendChart").getContext("2d");

    // Destroy existing chart if any
    if (chartInstance) {
        chartInstance.destroy();
    }

    // Create gradient colors
    let gradientUptime = ctx.createLinearGradient(0, 0, 0, 400);
    gradientUptime.addColorStop(0, "rgba(75, 192, 192, 1)"); // Teal
    gradientUptime.addColorStop(1, "rgba(75, 192, 192, 0.2)"); // Light teal

    let gradientDowntime = ctx.createLinearGradient(0, 0, 0, 400);
    gradientDowntime.addColorStop(0, "rgba(255, 99, 132, 1)"); // Red
    gradientDowntime.addColorStop(1, "rgba(255, 99, 132, 0.2)"); // Light red

    // Create new chart
    chartInstance = new Chart(ctx, {
        type: "bar",
        data: {
            labels: labels,
            datasets: [
                {
                    label: "Uptime (minutes)",
                    data: uptimeData,
                    backgroundColor: gradientUptime,
                    borderColor: "rgba(75, 192, 192, 1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(75, 192, 192, 0.8)",
                },
                {
                    label: "Downtime (minutes)",
                    data: downtimeData,
                    backgroundColor: gradientDowntime,
                    borderColor: "rgba(255, 99, 132, 1)",
                    borderWidth: 2,
                    hoverBackgroundColor: "rgba(255, 99, 132, 0.8)",
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: "top",
                    labels: {
                        font: {
                            size: 14
                        }
                    }
                },
                tooltip: {
                    enabled: true,
                    backgroundColor: "rgba(0, 0, 0, 0.8)",
                    titleFont: {
                        size: 14
                    },
                    bodyFont: {
                        size: 12
                    }
                }
            },
            scales: {
                x: {
                    ticks: {
                        font: {
                            size: 12
                        }
                    },
                    grid: {
                        display: false
                    }
                },
                y: {
                    beginAtZero: true,
                    ticks: {
                        font: {
                            size: 12
                        }
                    },
                    grid: {
                        color: "rgba(200, 200, 200, 0.2)"
                    }
                }
            }
        }
    });
}





options: {
    animation: {
        duration: 1500, // 1.5s animation
        easing: "easeInOutQuart"
    },
}



tooltip: {
    callbacks: {
        label: function(tooltipItem) {
            return tooltipItem.dataset.label + ": " + tooltipItem.raw + " mins";
        }
    }
}




scales: {
    x: {
        barPercentage: 0.6, // Adjust bar width
        categoryPercentage: 0.8
    }
}




<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>






plugins: [ChartDataLabels],
options: {
    plugins: {
        datalabels: {
            color: "#000",
            anchor: "end",
            align: "top",
            font: {
                size: 12
            }
        }
    }
}

